name: Playwright Tests with Caching
on:
  schedule:
    - cron: '0 12 * * *'
  push:
    branches:
      - 'master'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test-to-run:
        description: 'Add your npx code here'
        required: false
        default: 'npm run script:to:run'
        type: string
      workers:
        description: 'Number of workers to use'
        required: false
        default: '1'
        type: choice
        options:
          - '1'
          - '2'
          - '3'
          - '4'
      browsers:
        description: 'Browsers to run tests on'
        required: false
        default: 'chromium'
        type: choice
        options:
          - 'chromium'
          - 'firefox'
          - 'webkit'
          - 'all'

jobs:
  run-playwright-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      
      - name: Run Playwright tests
        env:
          test-to-run: ${{github.event.inputs.test-to-run || 'npm run script:to:run'}}
          workers: ${{github.event.inputs.workers || '1'}}
          browsers: ${{github.event.inputs.browsers || 'chromium'}}
        run: |
          ${{env.test-to-run}} -- --workers=${{env.workers}} --project=${{env.browsers}} || npm run posttest


      - name: Upload allure report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: allure-results
          path: allure-report/
          retention-days: 30

  run-snyk-scan:
    name: Snyk scan
    runs-on: ubuntu-latest
    steps:
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}    

  run-sonarqube-scan:
    name: SonarQube
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  run-zap-scan:
    name: Zap scan
    runs-on: ubuntu-latest
    steps:  
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        continue-on-error: true
        with:
          target: ${{ secrets.ZAP_TARGET_URL }}